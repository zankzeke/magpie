apply plugin: 'java'
apply plugin: 'jacoco'
apply plugin: 'com.github.kt3k.coveralls'

// Java 8 _requires_ conforming HTML for the Javadoc
//  this code prints warnings but does not fail
if (JavaVersion.current().isJava8Compatible()) {
	allprojects {
		tasks.withType(Javadoc) {
			options.addStringOption('Xdoclint:none', '-quiet')
		}
	}
}

// Where to find libraries for Magpie
repositories {
    maven  {
        url "http://repo1.maven.org/maven2"
    }
    flatDir {
        dirs 'required-libraries'
    }
}

// Resources for the build script
buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath 'org.kt3k.gradle.plugin:coveralls-gradle-plugin:2.7.1'
    }
}

// Parameters for the coverage test
jacocoTestReport {
    reports {
        xml.enabled = true // coveralls plugin depends on xml format report
        html.enabled = true
    }
}

// Dependency list
dependencies {
    // General dependencies
    compile group: 'org.apache.commons', name: 'commons-collections4', version: '4.1'
    compile group: 'commons-io', name: 'commons-io', version: '2.5'
    compile group: 'org.apache.commons', name: 'commons-lang3', version: '3.1'
    compile group: 'org.apache.commons', name: 'commons-math3', version: '3.6.1'
    compile group: 'org.json', name: 'json', version: '20160810'
    compile group: 'nz.ac.waikato.cms.weka', name: 'weka-dev', version: '3.7.13'
    compile group: 'org.yaml', name: 'snakeyaml', version: '1.17'

    // For the REST Server
    compile 'org.glassfish.jersey.core:jersey-server:2.23.2'
    compile 'org.glassfish.jersey.containers:jersey-container-grizzly2-http:2.23.2'

    // For JUNIT
    testCompile 'junit:junit:4.12'

    // Custom libraries provided with Magpie
    compile project(':lib/vassal')
    compile project(':lib/expr')
}

// Distribution instructions
jar {
    // Set the name
    baseName = 'Magpie'

    // Define output to be the 'dist' direction
    destinationDir = new File('dist')

    // Add classpath and main file to jar
    manifest.attributes(
        'Main-Class': 'magpie.Magpie',
        'Class-Path': configurations.compile.files.collect { 'lib/' + it.name }.join(' ')
    )

    // Package it with dependencies
    from configurations.compile.collect { it.isDirectory() ? it : zipTree(it) }

    // Copy the exe folder into the output
    copy {
        from 'exes'
        into 'dist/exes'
    }

    // Copy python scripts into the output
    copy {
        from 'py'
        into 'dist/py'
    }
}

// Javadoc instructions
javadoc {
    destinationDir = new File('javadoc')
}
