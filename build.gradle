apply plugin: 'java'
apply plugin: 'cobertura'
apply plugin: 'com.github.kt3k.coveralls'

// Java 8 _requires_ conforming HTML for the Javadoc
//  this code prints warnings but does not fail
if (JavaVersion.current().isJava8Compatible()) {
	allprojects {
		tasks.withType(Javadoc) {
			options.addStringOption('Xdoclint:none', '-quiet')
		}
	}
}

// Where to find libraries for Magpie
repositories {
    maven  {
        url "http://repo1.maven.org/maven2"
    }
    flatDir {
        dirs 'required-libraries'
    }
}

// Resources for the build script
buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath 'net.saliman:gradle-cobertura-plugin:2.2.4'
        classpath 'org.kt3k.gradle.plugin:coveralls-gradle-plugin:2.4.0'
    }
}

// Parameters for the coverage test
cobertura {
    coverageFormats = [ 'xml' ]
    coverageIgnoreTrivial = true
    coverageExcludes = [ '.*autogen.*' ]
}

// Dependency list
dependencies {
    compile name: 'commons-collections-3.2.1'
    compile name: 'commons-lang3-3.1'
    compile group: 'org.apache.commons', name: 'commons-math3', version: '3.6.1'
    compile group: 'org.json', name: 'json', version: '20160810'
    compile name: 'commons-io-2.4'
    compile name: 'expr'
    compile name: 'guava-16.0.1'
    compile name: 'javassist'
    compile name: 'jetty-http-9.2.10.v20150310'
    compile name: 'jetty-io-9.2.10.v20150310'
    compile name: 'jetty-security-9.2.10.v20150310'
    compile name: 'jetty-server-9.2.10.v20150310'
    compile name: 'jetty-servlet-9.2.10.v20150310'
    compile name: 'jetty-servlets-9.2.10.v20150310'
    compile name: 'jetty-util-9.2.10.v20150310'
    testCompile 'junit:junit:4.12'
    compile name: 'libthrift-0.9.2'
    compile name: 'reflections-0.9.9-RC1'
    compile name: 'servlet-api-3.1'
    compile name: 'slf4j-api-1.7.6'
    compile name: 'slf4j-nop-1.7.6'
    compile name: 'weka'
    compile name: 'Vassal'
}

// Distribution instructions
jar {
    // Set the name
    baseName = 'Magpie'

    // Define output to be the 'dist' direction
    destinationDir = new File('dist')

    // Add classpath and main file to jar
    manifest.attributes(
        'Main-Class': 'magpie.Magpie',
        'Class-Path': configurations.compile.files.collect { 'lib/' + it.name }.join(' ')
    )

    // Package it with dependencies
    from configurations.compile.collect { it.isDirectory() ? it : zipTree(it) }

    // Copy the exe folder into the output
    copy {
        from 'exes'
        into 'dist/exes'
    }

    // Copy python scripts into the output
    copy {
        from 'py'
        into 'dist/py'
    }
}

// Javadoc instructions
javadoc {
    destinationDir = new File('javadoc')
}
